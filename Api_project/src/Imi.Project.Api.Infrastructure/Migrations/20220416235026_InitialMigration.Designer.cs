// <auto-generated />
using System;
using Imi.Project.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Imi.Project.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220416235026_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FishFishProcessing", b =>
                {
                    b.Property<long>("FishProssingsId")
                        .HasColumnType("bigint");

                    b.Property<long>("FishsId")
                        .HasColumnType("bigint");

                    b.HasKey("FishProssingsId", "FishsId");

                    b.HasIndex("FishsId");

                    b.ToTable("FishFishProcessing");

                    b.HasData(
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 1L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 1L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 1L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 1L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 2L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 2L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 2L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 2L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 3L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 3L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 3L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 3L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 4L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 4L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 4L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 4L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 5L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 5L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 5L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 5L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 6L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 6L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 6L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 6L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 7L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 7L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 7L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 7L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 2L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 3L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 10L,
                            FishsId = 8L
                        },
                        new
                        {
                            FishProssingsId = 3L,
                            FishsId = 9L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 9L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 9L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 9L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 9L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 9L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 10L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 10L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 10L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 10L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 11L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 11L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 12L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 13L
                        },
                        new
                        {
                            FishProssingsId = 2L,
                            FishsId = 13L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 13L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 13L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 13L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 13L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 13L
                        },
                        new
                        {
                            FishProssingsId = 10L,
                            FishsId = 13L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 14L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 14L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 14L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 14L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 14L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 15L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 15L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 15L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 15L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 16L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 16L
                        },
                        new
                        {
                            FishProssingsId = 3L,
                            FishsId = 17L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 17L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 17L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 17L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 17L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 17L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 18L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 18L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 18L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 18L
                        },
                        new
                        {
                            FishProssingsId = 3L,
                            FishsId = 19L
                        },
                        new
                        {
                            FishProssingsId = 5L,
                            FishsId = 19L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 19L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 19L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 19L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 19L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 20L
                        },
                        new
                        {
                            FishProssingsId = 2L,
                            FishsId = 20L
                        },
                        new
                        {
                            FishProssingsId = 3L,
                            FishsId = 20L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 20L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 20L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 20L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 21L
                        },
                        new
                        {
                            FishProssingsId = 2L,
                            FishsId = 21L
                        },
                        new
                        {
                            FishProssingsId = 3L,
                            FishsId = 21L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 21L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 21L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 21L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 22L
                        },
                        new
                        {
                            FishProssingsId = 2L,
                            FishsId = 22L
                        },
                        new
                        {
                            FishProssingsId = 3L,
                            FishsId = 22L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 22L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 22L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 22L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 23L
                        },
                        new
                        {
                            FishProssingsId = 2L,
                            FishsId = 23L
                        },
                        new
                        {
                            FishProssingsId = 3L,
                            FishsId = 23L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 23L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 23L
                        },
                        new
                        {
                            FishProssingsId = 7L,
                            FishsId = 23L
                        },
                        new
                        {
                            FishProssingsId = 11L,
                            FishsId = 24L
                        },
                        new
                        {
                            FishProssingsId = 11L,
                            FishsId = 25L
                        },
                        new
                        {
                            FishProssingsId = 11L,
                            FishsId = 26L
                        },
                        new
                        {
                            FishProssingsId = 11L,
                            FishsId = 27L
                        },
                        new
                        {
                            FishProssingsId = 1L,
                            FishsId = 28L
                        },
                        new
                        {
                            FishProssingsId = 4L,
                            FishsId = 28L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 28L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 28L
                        },
                        new
                        {
                            FishProssingsId = 6L,
                            FishsId = 29L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 29L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 29L
                        },
                        new
                        {
                            FishProssingsId = 8L,
                            FishsId = 30L
                        },
                        new
                        {
                            FishProssingsId = 9L,
                            FishsId = 30L
                        },
                        new
                        {
                            FishProssingsId = 11L,
                            FishsId = 31L
                        },
                        new
                        {
                            FishProssingsId = 11L,
                            FishsId = 32L
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("HasApprovedTermsAndConditions")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c8554266-b401-4519-9aeb-a9283053fc58",
                            Email = "admin@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTermsAndConditions = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN@IMI.BE",
                            NormalizedUserName = "IMIADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEOyzSkUJtHgOvYU2HtWfS8wnnDwNkVBPI2Z1HqsMHsTyuzNq2Fl0eSn4krMsn6R+Og==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VVPCRDAS3MJWQD5CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiAdmin"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c8554266-b897-4519-9aeb-a9283053fc58",
                            Email = "user@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTermsAndConditions = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@IMI.BE",
                            NormalizedUserName = "IMIUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEKwBq58r8xssBQWyxRaOFnU7rXM1Bd7j5ueWJKyZlc86shy0Zi3t9ZvLq7KqlpT+Pw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VVPCRDAS3MJ7895CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiUser"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000003",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c8554266-b897-4519-9aeb-a9283053fc58",
                            Email = "refuser@imi.be",
                            EmailConfirmed = true,
                            HasApprovedTermsAndConditions = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "REFUSER@IMI.BE",
                            NormalizedUserName = "IMIREFUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEDFpM1yKDzydL6+b+VdtnnxNkIaDxX1qWsa9EiHc0mhaW8RFviN0Y25YOWqe1xKeYQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VVPCRDAS3MJ7895CSW2GWPRADBXEZINA",
                            TwoFactorEnabled = false,
                            UserName = "ImiRefuser"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2213),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2215),
                            Name = "Verse vis"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2217),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2217),
                            Name = "Diepvries"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2218),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2219),
                            Name = "Platvis"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2220),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2221),
                            Name = "Rondvis"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2222),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2223),
                            Name = "Mosselen"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2224),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2224),
                            Name = "Schaal & Weekdieren"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2225),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2226),
                            Name = "Gerookte & gemarineerde vis"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2227),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2227),
                            Name = "Fileren Vis"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2228),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2229),
                            Name = "Gekweekte vis"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2230),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2231),
                            Name = "Wilde vis"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2232),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2232),
                            Name = "Kreeft"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2233),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2234),
                            Name = "Diverse"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Fish", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MaxWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinWeigth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("OriginCountryId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UrlImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("OriginCountryId");

                    b.ToTable("Fishs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1040),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 854, DateTimeKind.Local).AddTicks(9113),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1275),
                            MaxWeight = 1.5m,
                            MinWeigth = 1m,
                            Name = "Tong 1",
                            OriginCountryId = 1L,
                            Price = 30m,
                            UrlImage = "images/Tongeen_met.jpg"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1523),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1518),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1523),
                            MaxWeight = 0.1m,
                            MinWeigth = 0.75m,
                            Name = "Tong 2",
                            OriginCountryId = 1L,
                            Price = 27m,
                            UrlImage = "images/tongtwee.jpg"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1530),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1527),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1531),
                            MaxWeight = 0.75m,
                            MinWeigth = 0.5m,
                            Name = "Tong 3",
                            OriginCountryId = 1L,
                            Price = 25m,
                            UrlImage = "images/tong_3.jpg"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1536),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1533),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1537),
                            MaxWeight = 0.5m,
                            MinWeigth = 0.4m,
                            Name = "Tong 4",
                            OriginCountryId = 1L,
                            Price = 33m,
                            UrlImage = "images/tong4.jpg"
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1543),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1540),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1543),
                            MaxWeight = 0.4m,
                            MinWeigth = 0.25m,
                            Name = "Tong 5",
                            OriginCountryId = 1L,
                            Price = 22m,
                            UrlImage = "images/tong5.jpg"
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1549),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1546),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1549),
                            MaxWeight = 0.25m,
                            MinWeigth = 0.15m,
                            Name = "Tong 6",
                            OriginCountryId = 1L,
                            Price = 19m,
                            UrlImage = "images/tong6.png"
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1555),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1552),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1555),
                            MaxWeight = 0.15m,
                            MinWeigth = 0.1m,
                            Name = "Tong 7",
                            OriginCountryId = 1L,
                            Price = 15m,
                            UrlImage = "images/tong7.jpg"
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 4L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1561),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1558),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1561),
                            MaxWeight = 5m,
                            MinWeigth = 4m,
                            Name = "Zalm Heel",
                            OriginCountryId = 5L,
                            Price = 12m,
                            UrlImage = "images/Zalm_heel.jpg"
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1567),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1564),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1567),
                            MaxWeight = 1.7m,
                            MinWeigth = 1m,
                            Name = "Zalm Filet M/V",
                            OriginCountryId = 5L,
                            Price = 17m,
                            UrlImage = "images/zalm_filet_met.jpg"
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1573),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1570),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1573),
                            MaxWeight = 1.7m,
                            MinWeigth = 0.7m,
                            Name = "Zalm Filet Z/V",
                            OriginCountryId = 5L,
                            Price = 25m,
                            UrlImage = "images/zalm_filet_zonder.jpg"
                        },
                        new
                        {
                            Id = 11L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1579),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1576),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1579),
                            MaxWeight = 0.25m,
                            MinWeigth = 0.1m,
                            Name = "Zalm Portjes M/V",
                            OriginCountryId = 5L,
                            Price = 29m,
                            UrlImage = "images/zalm_Por.jpg"
                        },
                        new
                        {
                            Id = 12L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1585),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1582),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1585),
                            MaxWeight = 0.25m,
                            MinWeigth = 0.1m,
                            Name = "Zalm Portjes Z/V",
                            OriginCountryId = 5L,
                            Price = 31m,
                            UrlImage = "images/zalm_Por_zonder.jpg"
                        },
                        new
                        {
                            Id = 13L,
                            CategoryId = 4L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1591),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1588),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1591),
                            MaxWeight = 6m,
                            MinWeigth = 1m,
                            Name = "Kabeljauw Heel",
                            OriginCountryId = 2L,
                            Price = 8m,
                            UrlImage = "images/Kabeljauw.jpg"
                        },
                        new
                        {
                            Id = 14L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1597),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1594),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1598),
                            MaxWeight = 3.5m,
                            MinWeigth = 0.2m,
                            Name = "Kabeljauw Filet M/V",
                            OriginCountryId = 2L,
                            Price = 14m,
                            UrlImage = "images/kabeljauw_filet_met.jpg"
                        },
                        new
                        {
                            Id = 15L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1603),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1600),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1603),
                            MaxWeight = 2.7m,
                            MinWeigth = 0.2m,
                            Name = "Kabeljauw Filet Z/V",
                            OriginCountryId = 2L,
                            Price = 18m,
                            UrlImage = "images/kabeljauw_filet_zonder.jpg"
                        },
                        new
                        {
                            Id = 16L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1609),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1606),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1609),
                            MaxWeight = 0.25m,
                            MinWeigth = 0.1m,
                            Name = "Kabeljauw Portjes M/V",
                            OriginCountryId = 2L,
                            Price = 21m,
                            UrlImage = "images/kabeljauw_Por.jpg"
                        },
                        new
                        {
                            Id = 17L,
                            CategoryId = 4L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1614),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1612),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1615),
                            MaxWeight = 13m,
                            MinWeigth = 1m,
                            Name = "Kool vis Heel",
                            OriginCountryId = 4L,
                            Price = 6m,
                            UrlImage = "images/koolvis.jpg"
                        },
                        new
                        {
                            Id = 18L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1620),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1618),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1621),
                            MaxWeight = 0.25m,
                            MinWeigth = 0.5m,
                            Name = "Kool Filet M/V",
                            OriginCountryId = 4L,
                            Price = 11m,
                            UrlImage = "images/koolvis_fileren.jpg"
                        },
                        new
                        {
                            Id = 19L,
                            CategoryId = 4L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1626),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1624),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1627),
                            MaxWeight = 2m,
                            MinWeigth = 0.5m,
                            Name = "vlaswijting Heel",
                            OriginCountryId = 4L,
                            Price = 12m,
                            UrlImage = "images/Pollak_vlaswijting-31.jpg"
                        },
                        new
                        {
                            Id = 20L,
                            CategoryId = 9L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1632),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1630),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1633),
                            MaxWeight = 1m,
                            MinWeigth = 0.2m,
                            Name = "Zeebaars Gekweekt Heel",
                            OriginCountryId = 3L,
                            Price = 8m,
                            UrlImage = "images/Zeebaars.jpg"
                        },
                        new
                        {
                            Id = 21L,
                            CategoryId = 10L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1638),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1636),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1639),
                            MaxWeight = 2m,
                            MinWeigth = 0.8m,
                            Name = "Zeebaars Gewilde",
                            OriginCountryId = 1L,
                            Price = 14m,
                            UrlImage = "images/Gewilde_Zeebaars.png"
                        },
                        new
                        {
                            Id = 22L,
                            CategoryId = 10L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1644),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1642),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1645),
                            MaxWeight = 7m,
                            MinWeigth = 1m,
                            Name = "Zalm gewilde Heel",
                            OriginCountryId = 9L,
                            Price = 14m,
                            UrlImage = "images/zalm_gewilde.jpg"
                        },
                        new
                        {
                            Id = 23L,
                            CategoryId = 9L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1650),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1648),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1651),
                            MaxWeight = 1m,
                            MinWeigth = 0.2m,
                            Name = "Dorade Royal",
                            OriginCountryId = 3L,
                            Price = 8m,
                            UrlImage = "images/dorade.png"
                        },
                        new
                        {
                            Id = 24L,
                            CategoryId = 11L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1657),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1654),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1657),
                            MaxWeight = 0.5m,
                            MinWeigth = 0.4m,
                            Name = "Kreeft 4/5",
                            OriginCountryId = 9L,
                            Price = 32m,
                            UrlImage = "images/canadese_kreeft_4_5.jpg"
                        },
                        new
                        {
                            Id = 25L,
                            CategoryId = 11L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1663),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1660),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1663),
                            MaxWeight = 0.6m,
                            MinWeigth = 0.5m,
                            Name = "Kreeft 5/6",
                            OriginCountryId = 9L,
                            Price = 35m,
                            UrlImage = "images/canadese-kreeft_5_6.jpg"
                        },
                        new
                        {
                            Id = 26L,
                            CategoryId = 11L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1669),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1666),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1669),
                            MaxWeight = 0.8m,
                            MinWeigth = 0.7m,
                            Name = "Kreeft 7/8",
                            OriginCountryId = 9L,
                            Price = 39m,
                            UrlImage = "images/kreeft7_8.jpg"
                        },
                        new
                        {
                            Id = 27L,
                            CategoryId = 11L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1674),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1672),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1675),
                            MaxWeight = 1.4m,
                            MinWeigth = 1m,
                            Name = "Kreeft 1+",
                            OriginCountryId = 9L,
                            Price = 42m,
                            UrlImage = "images/kreeftPlus.jpg"
                        },
                        new
                        {
                            Id = 28L,
                            CategoryId = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1681),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1678),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1681),
                            MaxWeight = 2m,
                            MinWeigth = 0.5m,
                            Name = "Griet Heel",
                            OriginCountryId = 1L,
                            Price = 19m,
                            UrlImage = "images/Griet_heel_2.jpg"
                        },
                        new
                        {
                            Id = 29L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1687),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1684),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1687),
                            MaxWeight = 10m,
                            MinWeigth = 0.5m,
                            Name = "Wit Heilbot Filet M/V",
                            OriginCountryId = 7L,
                            Price = 25m,
                            UrlImage = "images/Heilbot_wit_filet.jpg"
                        },
                        new
                        {
                            Id = 30L,
                            CategoryId = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1693),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1690),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1693),
                            MaxWeight = 10m,
                            MinWeigth = 0.5m,
                            Name = "Zwart Heilbot Filet Z/V",
                            OriginCountryId = 7L,
                            Price = 15m,
                            UrlImage = "images/heilbotfilet_zwart_Por.jpg"
                        },
                        new
                        {
                            Id = 31L,
                            CategoryId = 5L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1698),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1696),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1699),
                            MaxWeight = 0.25m,
                            MinWeigth = 0.1m,
                            Name = "Mosselen Jumbo 1kg",
                            OriginCountryId = 2L,
                            Price = 6m,
                            UrlImage = "images/jumbo_1kg.jpg"
                        },
                        new
                        {
                            Id = 32L,
                            CategoryId = 5L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1704),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1702),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1705),
                            MaxWeight = 0.25m,
                            MinWeigth = 0.1m,
                            Name = "Mosselen Jumbo 5kg",
                            OriginCountryId = 2L,
                            Price = 6m,
                            UrlImage = "images/jumbo_5.png"
                        },
                        new
                        {
                            Id = 33L,
                            CategoryId = 5L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1711),
                            DateOfArrival = new DateTime(2022, 4, 17, 1, 50, 25, 855, DateTimeKind.Local).AddTicks(1708),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(1712),
                            MaxWeight = 0.25m,
                            MinWeigth = 0.1m,
                            Name = "Mosselen Jumbo 10kg",
                            OriginCountryId = 2L,
                            Price = 6m,
                            UrlImage = "images/jumbo-mosselen_15.jpg"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.FishProcessing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("FishProcessings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3159),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3161),
                            Name = "Fileren"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3163),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3164),
                            Name = "Gutten"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3165),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3165),
                            Name = "OntSchubben"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3166),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3167),
                            Name = "Kuisen"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3168),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3169),
                            Name = "Haas"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3170),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3170),
                            Name = "ZonderVel"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3171),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3172),
                            Name = "Graatloos"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3173),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3173),
                            Name = "Portjes-Snijden"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3174),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3175),
                            Name = "Mappen"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3176),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3176),
                            Name = "Moten-snijden"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3177),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(3178),
                            Name = "Koken"
                        });
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.OriginCountry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastEditedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("OriginCountries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2727),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2729),
                            Name = "België"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2731),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2732),
                            Name = "Nederland"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2733),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2733),
                            Name = "Turkije"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2734),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2735),
                            Name = "Denemarken"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2736),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2737),
                            Name = "Noorwegen"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2738),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2738),
                            Name = "Frankrijk"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2739),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2740),
                            Name = "Zweden"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2741),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2741),
                            Name = "China"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2742),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2743),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2744),
                            LastEditedOn = new DateTime(2022, 4, 16, 23, 50, 25, 855, DateTimeKind.Utc).AddTicks(2745),
                            Name = "Filipijnen"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            ConcurrencyStamp = "1D6B7B4D-E325-498F-8A57-3637783370E6",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            ConcurrencyStamp = "c8554266-b897-4519-9aeb-a9283053fc58",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "HasApprovedTermsAndConditions",
                            ClaimValue = "True",
                            UserId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "HasApprovedTermsAndConditions",
                            ClaimValue = "False",
                            UserId = "00000000-0000-0000-0000-000000000003"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000001",
                            RoleId = "00000000-0000-0000-0000-000000000001"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000002",
                            RoleId = "00000000-0000-0000-0000-000000000002"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000003",
                            RoleId = "00000000-0000-0000-0000-000000000002"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FishFishProcessing", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.FishProcessing", null)
                        .WithMany()
                        .HasForeignKey("FishProssingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.Fish", null)
                        .WithMany()
                        .HasForeignKey("FishsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Fish", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.Category", "Category")
                        .WithMany("Fishs")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.OriginCountry", "OriginCountry")
                        .WithMany("Fishs")
                        .HasForeignKey("OriginCountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("OriginCountry");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Imi.Project.Api.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.Category", b =>
                {
                    b.Navigation("Fishs");
                });

            modelBuilder.Entity("Imi.Project.Api.Core.Entities.OriginCountry", b =>
                {
                    b.Navigation("Fishs");
                });
#pragma warning restore 612, 618
        }
    }
}
